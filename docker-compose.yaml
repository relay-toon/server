version: '3.7'
services:
  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres:/var/lib/postgresql/data

  api:
    build: .
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      CLIENT_URL: ${CLIENT_URL}
      BACKEND_URL: ${BACKEND_URL}
      COOKIE_DOMAIN: ${COOKIE_DOMAIN}

      KAKAO_CLIENT_KEY: ${KAKAO_CLIENT_KEY}
      NAVER_CLIENT_KEY: ${NAVER_CLIENT_KEY}
      NAVER_SECRET_KEY: ${NAVER_SECRET_KEY}
      GOOGLE_CLIENT_KEY: ${GOOGLE_CLIENT_KEY}
      GOOGLE_SECRET_KEY: ${GOOGLE_SECRET_KEY}

      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE: ${JWT_EXPIRE}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_REFRESH_EXPIRE: ${JWT_REFRESH_EXPIRE}

      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
      AWS_S3_URL: ${AWS_S3_URL}
    ports:
      - 8000:8000
    command: npm run start:compose
    depends_on:
      - postgres

volumes:
  postgres:
